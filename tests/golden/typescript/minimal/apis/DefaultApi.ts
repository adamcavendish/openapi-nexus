// DO NOT EDIT - This file is automatically generated.
// Any manual changes will be overwritten on the next generation.
// To make changes, modify the source code and regenerate this file.

import { BaseAPI, JSONApiResponse, VoidApiResponse, ResponseError, type Configuration, type InitOverrideFunction } from '../runtime/runtime';

/** API client for default operations */
export class DefaultApi extends BaseAPI {
  

  /** Initialize the API client */
  constructor(configuration: Configuration) {
    
        // Call BaseAPI constructor with provided configuration or default
    super(configuration ?? DefaultConfig);
        
  }
  

  
  async getTestRaw(initOverrides: InitOverrideFunction | RequestInit): Promise<VoidApiResponse> {
    
          // Build path with path parameters
      let urlPath = ``;

      // Build query parameters
      const queryParameters: any = {};

      // Build headers
      const headerParameters: Record<string, string> = {
        ...this.configuration?.headers,
      };

      // Add header parameters

      // Make request
      const response = await this.request({
          path: urlPath,
          method: 'GET',
          headers: headerParameters,
          query: queryParameters,
      }, initOverrides);

      return new JSONApiResponse(response);
        
  }
  

  
  async getTest(initOverrides: InitOverrideFunction | RequestInit): Promise<void> {
    
          const response = await this.getTestRaw(initOverrides);
      return await response.value();
        
  }
  
}