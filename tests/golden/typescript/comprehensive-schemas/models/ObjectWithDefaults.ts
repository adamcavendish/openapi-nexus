/* tslint:disable */
/* eslint-disable */
/**
 * Comprehensive Schema Types Example
 *
 * Comprehensive test for all OpenAPI v3.1.2 schema types
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by openapi-nexus.
 * Do not edit the class manually.
 */

/** Object with default values */
export interface ObjectWithDefaults {
active?: boolean,
age?: number,
name?: string
}

export function instanceOfObjectWithDefaults(value: object): value is ObjectWithDefaults {
    return true;
}

export function ObjectWithDefaultsFromJSON(json: any): ObjectWithDefaults {
    return ObjectWithDefaultsFromJSONTyped(json, false);
}

export function ObjectWithDefaultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObjectWithDefaults {
    if (json == null) {
        return json;
    }
    return {
        'active': json['active'] ?? undefined,
        'age': json['age'] ?? undefined,
        'name': json['name'] ?? undefined,
    };
}

export function ObjectWithDefaultsToJSON(value?: ObjectWithDefaults | null): any {
    return ObjectWithDefaultsToJSONTyped(value, false);
}

export function ObjectWithDefaultsToJSONTyped(value?: ObjectWithDefaults | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    return {
        'active': value['active'],
        'age': value['age'],
        'name': value['name'],
    };
}

export const ObjectWithDefaultsPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
};