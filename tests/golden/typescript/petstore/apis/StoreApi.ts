// DO NOT EDIT - This file is automatically generated.
// Any manual changes will be overwritten on the next generation.
// To make changes, modify the source code and regenerate this file.

import { BaseAPI } from '../runtime/api'
import { Configuration } from '../runtime/config'
import type { Order } from '../models/Order'

/**
 * API client for store operations
 */
export class StoreApi extends BaseAPI {
/**
 * Initialize the API client
 */
constructor(configuration?: Configuration) {
  super(configuration);
}
/**
 * Returns pet inventories by status
 */
async getInventory(): Promise<string> {
    const url = `${this.configuration?.basePath || ''}/store/inventory`;
    return this.request({
      url,
      init: {
        method: 'GET',
      }
    }).then(response => response.json());
}
/**
 * Place an order for a pet
 */
async placeOrder(body: Order): Promise<Order> {
    const url = `${this.configuration?.basePath || ''}/store/order`;return this.request({
      url,
      init: {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(body),
      },
    }).then(response => response.json());
}
/**
 * Find purchase order by ID
 */
async getOrderById(orderId: string): Promise<Order> {
    const url = `${this.configuration?.basePath || ''}/store/order/${orderId}`;
    return this.request({
      url,
      init: {
        method: 'GET',
      }
    }).then(response => response.json());
}
/**
 * Delete purchase order by ID
 */
async deleteOrder(orderId: string): Promise<Response> {
    const url = `${this.configuration?.basePath || ''}/store/order/${orderId}`;
    return this.request({
      url,
      init: {
        method: 'DELETE',
      }
    });
}
}