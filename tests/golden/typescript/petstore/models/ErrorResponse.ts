// DO NOT EDIT - This file is automatically generated.
// Any manual changes will be overwritten on the next generation.
// To make changes, modify the source code and regenerate this file.

/** Error response model */
export interface ErrorResponse {
code: number, message: string
}

export function instanceOfErrorResponse(value: object): value is ErrorResponse {
    if (!('code' in value) || (value as any)['code'] === undefined) return false;
    if (!('message' in value) || (value as any)['message'] === undefined) return false;
    return true;
}

export function ErrorResponseFromJSON(json: any): ErrorResponse {
    return ErrorResponseFromJSONTyped(json, false);
}

export function ErrorResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorResponse {
    if (json == null) {
        return json;
    }
    return {
        'code': json['code'],
        'message': json['message'],
    };
}

export function ErrorResponseToJSON(value?: ErrorResponse | null): any {
    return ErrorResponseToJSONTyped(value, false);
}

export function ErrorResponseToJSONTyped(value?: ErrorResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    return {
        'code': value['code'],
        'message': value['message'],
    };
}

export const ErrorResponsePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
};