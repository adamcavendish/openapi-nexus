// DO NOT EDIT - This file is automatically generated.
// Any manual changes will be overwritten on the next generation.
// To make changes, modify the source code and regenerate this file.

/** Pet model */
export interface Pet {
category?: null | {
    id: number | null;
    name: string | null;
  },
id?: number | null,
name: string,
photo_urls: Array<string>,
status?: null | "available" | "pending" | "sold",
tags?: Array<{
    id: number | null;
    name: string | null;
  }>
}

export function instanceOfPet(value: object): value is Pet {
    if (!('name' in value) || (value as any)['name'] === undefined) return false;
    if (!('photo_urls' in value) || (value as any)['photo_urls'] === undefined) return false;
    return true;
}

export function PetFromJSON(json: any): Pet {
    return PetFromJSONTyped(json, false);
}

export function PetFromJSONTyped(json: any, ignoreDiscriminator: boolean): Pet {
    if (json == null) {
        return json;
    }
    return {
        'category': json['category'] ?? undefined,
        'id': json['id'] ?? undefined,
        'name': json['name'],
        'photo_urls': json['photo_urls'],
        'status': json['status'] ?? undefined,
        'tags': json['tags'] ?? undefined,
    };
}

export function PetToJSON(value?: Pet | null): any {
    return PetToJSONTyped(value, false);
}

export function PetToJSONTyped(value?: Pet | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    return {
        'category': value['category'],
        'id': value['id'],
        'name': value['name'],
        'photo_urls': value['photo_urls'],
        'status': value['status'],
        'tags': value['tags'],
    };
}

export const PetPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
};