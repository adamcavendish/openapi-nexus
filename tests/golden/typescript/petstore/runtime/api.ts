// DO NOT EDIT - This file is automatically generated.
// Any manual changes will be overwritten on the next generation.
// To make changes, modify the source code and regenerate this file.

import { Configuration } from './config';

/**
 * Base API class for all API clients
 */
export class BaseAPI {
/**
 * API configuration
 */
configuration?: Configuration
/**
 * Initialize the BaseAPI
 */
constructor(configuration?: Configuration) {
this.configuration = configuration;
}
/**
 * Make an HTTP request
 */
async request(context: RequestContext): Promise<Response> {
{
    // TODO: Implement method body
    throw new Error('Not implemented')
  }
}
}
/**
 * Error thrown when a required parameter is missing
 */
export class RequiredError extends Error {
/**
 * The field that is required
 */
field: string
/**
 * Create a new RequiredError
 */
constructor(field: string) {
super(`Field ${field} is required`); this.field = field;
}
}
/**
 * Request context for API calls
 */
export interface RequestContext {
/**
 * Request URL
 */
url: string, /**
 * Request initialization options
 */
init?: RequestInit
}