openapi: 3.1.0
info:
  title: Object Schemas Example
  description: Example demonstrating proper object schema handling
  version: 1.0.0

paths:
  /user:
    post:
      summary: Create a user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  
  /profile:
    get:
      summary: Get user profile
      operationId: getUserProfile
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

components:
  schemas:
    User:
      type: object
      description: A user object with defined properties
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the user
        username:
          type: string
          description: The username
        email:
          type: string
          format: email
          description: User's email address
        isActive:
          type: boolean
          description: Whether the user is active
        createdAt:
          type: string
          format: date-time
          description: When the user was created
      required:
        - id
        - username
        - email

    UserProfile:
      type: object
      description: Extended user profile with additional properties
      properties:
        user:
          $ref: '#/components/schemas/User'
        bio:
          type: string
          description: User's biography
        avatar:
          type: string
          format: uri
          description: URL to user's avatar image
        preferences:
          $ref: '#/components/schemas/UserPreferences'
        tags:
          type: array
          items:
            type: string
          description: User tags
      required:
        - user

    UserPreferences:
      type: object
      description: User preferences object
      properties:
        theme:
          type: string
          enum: [light, dark, auto]
          description: UI theme preference
        notifications:
          type: boolean
          description: Whether to receive notifications
        language:
          type: string
          description: Preferred language code
      required:
        - theme

    GenericObject:
      type: object
      description: A generic object without specific properties
      additionalProperties: true

    StrictObject:
      type: object
      description: A strict object that only allows defined properties
      properties:
        name:
          type: string
        value:
          type: number
      additionalProperties: false
      required:
        - name
